#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, turret, sleeves, gun, barrel, flare;

// Signal definitions
#define SIG_AIM				2

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from turret;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Tangue()
{
	var rockDir, rockAng, rockSpeed;
	rockDir = <-0.1>;
	rockAng = <-0.1>;
	while( TRUE )
	{
		while( get ABS(rockAng) < <1.31> )
		{
			rockSpeed = <1.45> - get ABS(rockAng);
			turn base to x-axis rockAng speed rockSpeed*5;
			turn base to z-axis rockAng speed rockSpeed*5;
			wait-for-turn base around x-axis;
			wait-for-turn base around z-axis;
			rockAng = rockAng + rockDir;
		}
		rockDir = 0 - rockDir;
		rockAng = rockAng + rockDir + rockDir;
	}
}

Create()
{
	hide flare;
	dont-cache gun;
	dont-cache barrel;
	dont-cache sleeves;
	dont-cache flare;
	dont-cache turret;
	start-script Tangue();
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
	move turret to y-axis [-4.000000] speed [1.000000];
	turn sleeves to x-axis <-90.000000> speed <100.000000>;
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep 3000;
	turn sleeves to x-axis <-90.000000> speed <100.000000>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <300.000000>;
	turn sleeves to x-axis <0.000000> - pitch speed <150.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeves around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	show flare;
	move barrel to z-axis [-1.000000] speed [500.000000];
	turn gun to z-axis <120.000000> speed <850.000000>;
	sleep 150;
	hide flare;
	move barrel to z-axis [0.000000] speed [5.000000];
	wait-for-turn gun around z-axis;
	turn gun to z-axis <0.000000> now;
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

SweetSpot(piecenum)
{
	piecenum = turret;
}

Killed(severity, corpsetype)
{
	hide flare;
	explode barrel type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode gun type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode sleeves type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode turret type BITMAPONLY | BITMAP4;
	if( severity <= 25 )
	{
		corpsetype = 1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		return (0);
	}
	corpsetype = 3;
}
