#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, towers, holo, lights, metal;

static-var  Static_Var_1;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

go()
{
	set ACTIVATION to 1;
	cache lights;
	hide lights;
	show metal;
	dont-cache metal;
}

stop()
{
	set ACTIVATION to 0;
	cache metal;
	hide metal;
	show lights;
	dont-cache lights;
}

ImAMetalMaker()
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 150;
	}
	Static_Var_1 = -1;
	while( TRUE )
	{
		if( get UNKNOWN_UNIT_VALUE(1024) == 1 )
		{
			if( Static_Var_1 != 1 )
			{
				call-script go();
				Static_Var_1 = 1;
			}
		}
		else if( Static_Var_1 != 0 )
		{
			call-script stop();
			Static_Var_1 = 0;
		}
		sleep 1000;
	}
}

Create()
{
	dont-shade metal;
	dont-cache lights;
	start-script SmokeUnit();
	start-script ImAMetalMaker();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode body type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode body type SHATTER | EXPLODE_ON_HIT | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode body type SHATTER | EXPLODE_ON_HIT | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode body type SHATTER | EXPLODE_ON_HIT | BITMAP2;
}
