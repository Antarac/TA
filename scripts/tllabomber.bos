#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, rwing, lwing, bombbay1, bombbay2, bombbay3, bombbay4,
       bombbay5, llthrust, lthrust, rthrust, rrthrust;

static-var  Static_Var_1, statechg_DesiredState, statechg_StateChanging;


activatescr()
{
	turn rwing to z-axis <0.000000> speed <60.000000>;
	turn lwing to z-axis <0.000000> speed <60.000000>;
}

deactivatescr()
{
	turn rwing to z-axis <100.000000> speed <60.000000>;
	turn lwing to z-axis <-100.000000> speed <60.000000>;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script activatescr();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script deactivatescr();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	hide bombbay1;
	hide bombbay2;
	hide bombbay3;
	hide bombbay4;
	hide bombbay5;
	hide llthrust;
	hide lthrust;
	hide rrthrust;
	hide rthrust;
	Static_Var_1 = 1;
	turn rwing to z-axis <100.000000> now;
	turn lwing to z-axis <-100.000000> now;
	call-script InitState();
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartMoving()
{
}

StopMoving()
{
}

QueryPrimary(piecenum)
{
	Static_Var_1 = Rand( 1, 5 );
	if( Static_Var_1 == 1 )
	{
		piecenum = bombbay1;
	}
	if( Static_Var_1 == 2 )
	{
		piecenum = bombbay2;
	}
	if( Static_Var_1 == 3 )
	{
		piecenum = bombbay3;
	}
	if( Static_Var_1 == 4 )
	{
		piecenum = bombbay4;
	}
	if( Static_Var_1 == 5 )
	{
		piecenum = bombbay5;
	}
}

SweetSpot(piecenum)
{
	piecenum = body;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP1;
		explode rwing type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type SHATTER | BITMAP4;
		explode lwing type SHATTER | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lwing type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode body type SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rwing type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
}
