#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, middle, forwardhelo, frontwings, rearwings, end, rearhelo,
       turret, gun1, flare1, gun2, flare2, gun3, flare3;

static-var  restore_delay, Static_Var_2, gun_1;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

RockUnit(anglex, anglez)
{
	turn base to x-axis anglex speed <50.000000>;
	turn base to z-axis anglez speed <50.000000>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <20.000000>;
	turn base to x-axis <0.000000> speed <20.000000>;
}

HitByWeapon(anglex, anglez)
{
	turn base to z-axis anglez speed <105.000000>;
	turn base to x-axis anglex speed <105.000000>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <30.000000>;
	turn base to x-axis <0.000000> speed <30.000000>;
}

Create()
{
	restore_delay = 2000;
	hide flare1;
	hide flare2;
	hide flare3;
	turn flare1 to z-axis <0.000000> now;
	turn flare1 to x-axis <0.000000> now;
	turn flare2 to z-axis <0.000000> now;
	turn flare2 to x-axis <0.000000> now;
	turn flare3 to z-axis <0.000000> now;
	turn flare3 to x-axis <0.000000> now;
	gun_1 = base;
	start-script SmokeUnit();
}

StartMoving()
{
	spin forwardhelo around y-axis speed <777.000000>;
	spin rearhelo around x-axis speed <777.000000>;
}

StopMoving()
{
	stop-spin forwardhelo around y-axis decelerate <2.000000>;
	stop-spin rearhelo around x-axis decelerate <2.000000>;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

RestoreAfterDelay()
{
	sleep restore_delay;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare2;
	}
	if( gun_1 == 2 )
	{
		piecenum = flare3;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		emit-sfx 1024 + 0 from flare1;
		gun_1 = body;
	}
	if( gun_1 == 1 )
	{
		emit-sfx 1024 + 0 from flare2;
		gun_1 = middle;
	}
	if( gun_1 == 2 )
	{
		emit-sfx 1024 + 0 from flare3;
		gun_1 = base;
	}
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		explode base type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode body type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode middle type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode forwardhelo type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode frontwings type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode rearwings type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode end type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode rearhelo type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode turret type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode gun1 type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode flare1 type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode gun2 type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode flare2 type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode gun3 type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode flare3 type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		explode base type NOHEATCLOUD | SHATTER | BITMAP4;
		explode body type NOHEATCLOUD | SHATTER | BITMAP4;
		explode middle type NOHEATCLOUD | SHATTER | BITMAP4;
		explode forwardhelo type NOHEATCLOUD | SHATTER | BITMAP4;
		explode frontwings type NOHEATCLOUD | SHATTER | BITMAP4;
		explode rearwings type NOHEATCLOUD | SHATTER | BITMAP4;
		explode end type NOHEATCLOUD | SHATTER | BITMAP4;
		explode rearhelo type NOHEATCLOUD | SHATTER | BITMAP4;
		explode turret type NOHEATCLOUD | SHATTER | BITMAP4;
		explode gun1 type NOHEATCLOUD | SHATTER | BITMAP4;
		explode flare1 type NOHEATCLOUD | SHATTER | BITMAP4;
		explode gun2 type NOHEATCLOUD | SHATTER | BITMAP4;
		explode flare2 type NOHEATCLOUD | SHATTER | BITMAP4;
		explode gun3 type NOHEATCLOUD | SHATTER | BITMAP4;
		explode flare3 type NOHEATCLOUD | SHATTER | BITMAP4;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		explode base type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode body type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode middle type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode forwardhelo type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode frontwings type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rearwings type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode end type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rearhelo type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode gun1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode flare1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode gun2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode flare2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode gun3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode flare3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		return (corpsetype);
	}
	explode base type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode body type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode middle type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode forwardhelo type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode frontwings type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rearwings type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode end type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rearhelo type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode gun1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode flare1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode gun2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode flare2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode gun3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode flare3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	return (corpsetype);
}
