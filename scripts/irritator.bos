#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  RayTurret, raygun, RayMount, RayFocus, LMFront, RMFront, LMBack, RMBack,
       RayFire, Flare, Body, rlleg, rfoot, llleg, lfoot, lupleg,
       rupleg, base, LMF, RMF, LMB, RMB, LMFFlare, RMFFlare,
       LMBFlare, RMBFlare, MGTurret, MGBarrels, MGFlare, LArm, RArm, Spark_emit,
       Emit1, Emit2, Emit3, Emit4;

static-var  bMoving, bAiming, Static_Var_3, gun_3, Static_Var_5;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_AIM_3			8
#define SIG_MOVE			32


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from Body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Sparks()
{
	while( TRUE )
	{
		while( !bAiming )
		{
			sleep 100;
		}
		emit-sfx 1024 + 1 from Emit1;
		sleep 5;
		emit-sfx 1024 + 1 from Emit2;
		sleep 5;
		emit-sfx 1024 + 1 from Emit3;
		sleep 5;
		emit-sfx 1024 + 1 from Emit4;
		sleep 5;
		emit-sfx 1024 + 1 from Spark_emit;
		sleep 200;
	}
}

MotionControl()
{
	while( TRUE )
	{
		if( !bAiming )
		{
			Static_Var_3 = 0;
			if( !Static_Var_5 )
			{
				turn rupleg to x-axis <-35.000000> speed <196.000000>;
				turn lupleg to x-axis <28.000000> speed <106.395604>;
			}
			if( Static_Var_5 )
			{
				turn rupleg to x-axis <-35.000000> speed <98.000000>;
				turn lupleg to x-axis <28.000000> speed <78.395604>;
			}
			turn LArm to x-axis <-10.000000> speed <30.000000>;
			turn RArm to x-axis <20.000000> speed <40.000000>;
			turn llleg to x-axis <-15.000000> speed <42.000000>;
			turn lfoot to x-axis <-18.000000> speed <50.395604>;
			sleep 350;
			turn Body to x-axis <0.000000> speed <39.197802>;
			turn LArm to x-axis <0.000000> speed <20.000000>;
			turn RArm to x-axis <0.000000> speed <50.000000>;
			turn rupleg to x-axis <10.000000> speed <116.664835>;
			turn rlleg to x-axis <5.000000> speed <23.329670>;
			turn lupleg to x-axis <35.000000> speed <32.664835>;
			turn llleg to x-axis <10.000000> speed <116.664835>;
			turn lfoot to x-axis <5.000000> speed <84.000000>;
			sleep 215;
			turn Body to x-axis <-8.500000> speed <22.000000>;
			turn Body to y-axis <2.000000> speed <3.000000>;
			turn LArm to x-axis <20.000000> speed <30.000000>;
			turn RArm to x-axis <-10.000000> speed <40.000000>;
			turn lupleg to x-axis <-35.000000> speed <196.000000>;
			turn rupleg to x-axis <28.000000> speed <106.395604>;
			turn rlleg to x-axis <-15.000000> speed <42.000000>;
			turn rfoot to x-axis <-18.000000> speed <50.395604>;
			sleep 350;
			turn Body to x-axis <0.000000> speed <28.000000>;
			turn LArm to x-axis <0.000000> speed <50.000000>;
			turn RArm to x-axis <0.000000> speed <20.000000>;
			turn lupleg to x-axis <10.000000> speed <116.664835>;
			turn llleg to x-axis <5.000000> speed <23.329670>;
			turn rupleg to x-axis <35.000000> speed <32.664835>;
			turn rlleg to x-axis <10.000000> speed <116.664835>;
			turn rfoot to x-axis <5.000000> speed <84.000000>;
			if( Static_Var_5 )
			{
				Static_Var_5 = 0;
			}
		}
		if( bAiming )
		{
			Static_Var_3 = 1;
			if( !Static_Var_5 )
			{
				turn rupleg to x-axis <-35.000000> speed <196.000000>;
				turn lupleg to x-axis <28.000000> speed <106.395604>;
			}
			if( Static_Var_5 )
			{
				turn rupleg to x-axis <-35.000000> speed <98.000000>;
				turn lupleg to x-axis <28.000000> speed <78.395604>;
			}
			turn LArm to x-axis <-10.000000> speed <30.000000>;
			turn RArm to x-axis <20.000000> speed <40.000000>;
			turn llleg to x-axis <-15.000000> speed <42.000000>;
			turn lfoot to x-axis <-18.000000> speed <50.395604>;
			sleep 350;
			turn LArm to x-axis <0.000000> speed <20.000000>;
			turn RArm to x-axis <0.000000> speed <50.000000>;
			turn rupleg to x-axis <10.000000> speed <116.664835>;
			turn rlleg to x-axis <5.000000> speed <23.329670>;
			turn lupleg to x-axis <35.000000> speed <32.664835>;
			turn llleg to x-axis <10.000000> speed <116.664835>;
			turn lfoot to x-axis <5.000000> speed <84.000000>;
			sleep 215;
			turn LArm to x-axis <20.000000> speed <30.000000>;
			turn RArm to x-axis <-10.000000> speed <40.000000>;
			turn lupleg to x-axis <-35.000000> speed <196.000000>;
			turn rupleg to x-axis <28.000000> speed <106.395604>;
			turn rlleg to x-axis <-15.000000> speed <42.000000>;
			turn rfoot to x-axis <-18.000000> speed <50.395604>;
			sleep 350;
			turn LArm to x-axis <0.000000> speed <50.000000>;
			turn RArm to x-axis <0.000000> speed <20.000000>;
			turn lupleg to x-axis <10.000000> speed <116.664835>;
			turn llleg to x-axis <5.000000> speed <23.329670>;
			turn rupleg to x-axis <35.000000> speed <32.664835>;
			turn rlleg to x-axis <10.000000> speed <116.664835>;
			turn rfoot to x-axis <5.000000> speed <84.000000>;
			if( Static_Var_5 )
			{
				Static_Var_5 = 0;
			}
		}
		sleep 215;
		if( !bAiming )
		{
			turn Body to x-axis <-8.500000> speed <30.796703>;
			turn Body to y-axis <-2.000000> speed <4.197802>;
		}
	}
}

Create()
{
	hide Flare;
	dont-cache Flare;
	spin Flare around z-axis speed <300.000000>;
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	gun_3 = RayTurret;
	Static_Var_5 = 1;
	start-script SmokeUnit();
	start-script Sparks();
}

RestoreAfterDelay()
{
	sleep 5000;
	set-signal-mask 0;
	bAiming = FALSE;
	cache RayFire;
	move RayFocus to z-axis [0.000000] speed [2.500000];
	turn RayMount to y-axis <0.000000> speed <35.000000>;
	turn raygun to x-axis <0.000000> speed <40.000000>;
	wait-for-turn RayMount around y-axis;
	wait-for-turn raygun around x-axis;
}

RestoreSecondary()
{
	sleep 4000;
	set-signal-mask 0;
	bAiming = FALSE;
	turn MGTurret to y-axis <0.000000> speed <80.000000>;
	turn MGBarrels to z-axis <0.000000> speed <100.000000>;
	wait-for-turn MGTurret around y-axis;
	if( !bMoving )
	{
		turn RArm to x-axis <0.000000> speed <20.000000>;
		turn LArm to x-axis <0.000000> speed <20.000000>;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	start-script MotionControl();
	bMoving = TRUE;
}

StopMoving()
{
	signal SIG_MOVE;
	bMoving = FALSE;
	Static_Var_3 = 1;
	Static_Var_5 = 1;
	turn LArm to x-axis <0.000000> speed <20.000000>;
	turn RArm to x-axis <0.000000> speed <20.000000>;
	turn rupleg to x-axis <0.000000> speed <140.000000>;
	turn rlleg to x-axis <0.000000> speed <98.000000>;
	turn rfoot to x-axis <0.000000> speed <84.000000>;
	turn lupleg to x-axis <0.000000> speed <140.000000>;
	turn llleg to x-axis <0.000000> speed <98.000000>;
	turn lfoot to x-axis <0.000000> speed <84.000000>;
	if( !bAiming )
	{
		turn Body to x-axis <0.000000> speed <8.395604>;
		turn Body to y-axis <0.000000> speed <1.395604>;
	}
}

SweetSpot(piecenum)
{
	piecenum = RayTurret;
}

AimPrimary(heading, pitch)
{
	move RayFocus to z-axis [4.000000] speed [4.000000];
	dont-cache RayFire;
	bAiming = TRUE;
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	while( !Static_Var_3 )
	{
		sleep 250;
	}
	turn RayMount to y-axis heading speed <70.000000>;
	turn raygun to x-axis <0.000000> - pitch speed <75.000000>;
	wait-for-move RayFocus along z-axis;
	wait-for-turn RayMount around y-axis;
	wait-for-turn raygun around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	dont-cache Flare;
	emit-sfx 1024 from Flare;
	spin RayFocus around z-axis speed <325.000000>;
	move RayFocus to z-axis [2.000000] now;
	move RayFire to z-axis [2.000000] now;
	sleep 120;
	move RayFocus to z-axis [4.000000] speed [8.000000];
	move RayFire to z-axis [0.000000] speed [8.000000];
	sleep 150;
	stop-spin RayFocus around z-axis decelerate <15.000000>;
}

QueryPrimary(piecenum)
{
	piecenum = RayFire;
}

AimFromPrimary(piecenum)
{
	piecenum = raygun;
}

AimSecondary(heading, pitch)
{
	bAiming = TRUE;
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	while( !Static_Var_3 )
	{
		sleep 250;
	}
	turn RArm to x-axis <-45.000000> speed <90.000000>;
	turn LArm to x-axis <-45.000000> speed <90.000000>;
	while( heading >= 16380 AND heading <= 49140 )
	{
		sleep 250;
	}
	turn MGTurret to y-axis heading speed <120.000000>;
	wait-for-turn MGTurret around y-axis;
	start-script RestoreSecondary();
	return (1);
}

FireSecondary()
{
	emit-sfx 1024 + 2 from MGFlare;
	turn MGBarrels to z-axis <0.000000> now;
	spin MGBarrels around z-axis speed <400.000000>;
	sleep 1000;
	stop-spin MGBarrels around z-axis decelerate <15.000000>;
}

AimFromSecondary(piecenum)
{
	piecenum = MGTurret;
}

QuerySecondary(piecenum)
{
	piecenum = MGFlare;
}

AimFromTertiary(piecenum)
{
	piecenum = Body;
}

QueryTertiary(piecenum)
{
	if( gun_3 == 0 )
	{
		piecenum = LMFFlare;
	}
	if( gun_3 == 1 )
	{
		piecenum = RMFFlare;
	}
	if( gun_3 == 2 )
	{
		piecenum = LMBFlare;
	}
	if( gun_3 == 3 )
	{
		piecenum = RMBFlare;
	}
}

FireTertiary()
{
	if( gun_3 == 0 )
	{
		gun_3 = raygun;
		move LMFront to y-axis [-1.000000] speed [20.000000];
		wait-for-move LMFront along z-axis;
		move LMFront to y-axis [0.000000] speed [1.000000];
		return (0);
	}
	if( gun_3 == 1 )
	{
		gun_3 = RayMount;
		move RMFront to y-axis [-1.000000] speed [20.000000];
		wait-for-move RMFront along z-axis;
		move RMFront to y-axis [0.000000] speed [1.000000];
		return (0);
	}
	if( gun_3 == 2 )
	{
		gun_3 = RayFocus;
		move LMBack to y-axis [-1.000000] speed [20.000000];
		wait-for-move LMBack along z-axis;
		move LMBack to y-axis [0.000000] speed [1.000000];
		return (0);
	}
	if( gun_3 == 3 )
	{
		gun_3 = RayTurret;
		move RMBack to y-axis [-1.000000] speed [20.000000];
		wait-for-move RMBack along z-axis;
		move RMBack to y-axis [0.000000] speed [1.000000];
		return (0);
	}
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	return (1);
}

AimFromWeapon4(piecenum)
{
	piecenum = Body;
}

AimWeapon4(heading, pitch)
{
	if( get ACTIVATION )
	{
		return (1);
	}
	if( !get ACTIVATION )
	{
		return (0);
	}
}

QueryWeapon4(piecenum)
{
	piecenum = Body;
}

FireWeapon4(Func_Var_1)
{
}

Killed(severity, corpsetype)
{
	hide Flare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode raygun type NOHEATCLOUD | BITMAPONLY | BITMAP2;
		explode lfoot type NOHEATCLOUD | BITMAPONLY | BITMAP4;
		explode LMF type NOHEATCLOUD | BITMAPONLY | BITMAP5;
		explode RMF type NOHEATCLOUD | BITMAPONLY | BITMAP5;
		explode LMB type NOHEATCLOUD | FALL | BITMAP5;
		explode RMB type NOHEATCLOUD | FALL | BITMAP5;
		explode llleg type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode lupleg type NOHEATCLOUD | BITMAPONLY | BITMAP2;
		explode Body type NOHEATCLOUD | BITMAPONLY | BITMAP3;
		explode rfoot type NOHEATCLOUD | BITMAPONLY | BITMAP4;
		explode rlleg type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode rupleg type NOHEATCLOUD | BITMAPONLY | BITMAP2;
		explode RayTurret type NOHEATCLOUD | BITMAPONLY | BITMAP5;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD | FALL | BITMAP1;
		explode raygun type NOHEATCLOUD | SHATTER | BITMAP2;
		explode lfoot type NOHEATCLOUD | BITMAPONLY | BITMAP4;
		explode LMF type NOHEATCLOUD | FALL | BITMAP5;
		explode RMF type NOHEATCLOUD | FALL | BITMAP5;
		explode LMB type NOHEATCLOUD | FALL | BITMAP5;
		explode RMB type NOHEATCLOUD | FALL | BITMAP5;
		explode llleg type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode lupleg type NOHEATCLOUD | BITMAPONLY | BITMAP2;
		explode Body type NOHEATCLOUD | BITMAPONLY | BITMAP3;
		explode rfoot type NOHEATCLOUD | BITMAPONLY | BITMAP4;
		explode rlleg type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode rupleg type NOHEATCLOUD | BITMAPONLY | BITMAP2;
		explode RayTurret type NOHEATCLOUD | BITMAPONLY | BITMAP5;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode raygun type NOHEATCLOUD | SHATTER | BITMAP2;
		explode lfoot type NOHEATCLOUD | BITMAPONLY | BITMAP4;
		explode LMF type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode RMF type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode LMB type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode RMB type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode llleg type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode lupleg type NOHEATCLOUD | BITMAPONLY | BITMAP2;
		explode Body type NOHEATCLOUD | BITMAPONLY | BITMAP3;
		explode rfoot type NOHEATCLOUD | BITMAPONLY | BITMAP4;
		explode rlleg type NOHEATCLOUD | BITMAPONLY | BITMAP1;
		explode rupleg type NOHEATCLOUD | BITMAPONLY | BITMAP2;
		explode RayTurret type NOHEATCLOUD | BITMAPONLY | BITMAP5;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode raygun type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode lfoot type NOHEATCLOUD | BITMAPONLY | BITMAP4;
	explode LMF type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode RMF type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode LMB type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode RMB type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode llleg type NOHEATCLOUD | BITMAPONLY | BITMAP1;
	explode lupleg type NOHEATCLOUD | BITMAPONLY | BITMAP2;
	explode Body type NOHEATCLOUD | BITMAPONLY | BITMAP3;
	explode rfoot type NOHEATCLOUD | BITMAPONLY | BITMAP4;
	explode rlleg type NOHEATCLOUD | BITMAPONLY | BITMAP1;
	explode rupleg type NOHEATCLOUD | BITMAPONLY | BITMAP2;
	explode RayTurret type NOHEATCLOUD | SHATTER | BITMAP5;
	return (corpsetype);
}
