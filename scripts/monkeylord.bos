#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, cephalotorax, poupe, berceau, tourelle, ovale, canon, aiguille,
       bouche, cartouche, pattes, ecraseur_epaule,
       ecraseur_bras,leg1, leg2, leg3, leg4, leg5,
       leg6, load_shoulder, load_arm, unload_shoulder, unload_arm, goal_shoulder, goal_arm;

static-var  bMoving, gun_1, restore_delay, Static_Var_4, Static_Var_5;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_AIM_3			8


HexapodTrueWalk()
{
	while( bMoving )
	{
		if( bMoving )
		{
			turn leg1 to y-axis <43.005495> speed <40.000000>;
			turn leg1 to y-axis <0.000000> speed <40.000000>;
			turn leg1 to z-axis <0.000000> speed <40.000000>;
			turn leg1 to z-axis <0.000000> speed <40.000000>;
			turn leg2 to z-axis <0.000000> speed <40.000000>;
			turn leg2 to z-axis <31.005495> speed <40.000000>;
			turn leg3 to y-axis <34.005495> speed <40.000000>;
			turn leg3 to y-axis <34.005495> speed <40.000000>;
			turn leg3 to z-axis <31.005495> speed <40.000000>;
			turn leg3 to z-axis <0.000000> speed <40.000000>;
			turn leg4 to y-axis <-40.005495> speed <40.000000>;
			turn leg4 to y-axis <-40.005495> speed <40.000000>;
			turn leg4 to z-axis <-31.005495> speed <40.000000>;
			turn leg4 to z-axis <0.000000> speed <40.000000>;
			turn leg5 to y-axis <-37.005495> speed <40.000000>;
			turn leg5 to y-axis <0.000000> speed <40.000000>;
			turn leg5 to z-axis <0.000000> speed <40.000000>;
			turn leg5 to z-axis <0.000000> speed <40.000000>;
			turn leg6 to y-axis <0.000000> speed <40.000000>;
			turn leg6 to y-axis <-30.005495> speed <40.000000>;
			turn leg6 to z-axis <-45.010989> speed <40.000000>;
			sleep 200;
		}
		if( bMoving )
		{
			turn leg1 to z-axis <31.005495> speed <40.000000>;
			turn leg2 to y-axis <34.005495> speed <40.000000>;
			turn leg2 to z-axis <31.005495> speed <40.000000>;
			turn leg3 to y-axis <0.000000> speed <40.000000>;
			turn leg3 to z-axis <0.000000> speed <40.000000>;
			turn leg4 to y-axis <0.000000> speed <40.000000>;
			turn leg5 to z-axis <-31.005495> speed <40.000000>;
			turn leg6 to z-axis <2.000000> speed <40.000000>;
			sleep 200;
		}
		if( bMoving )
		{
			turn leg1 to y-axis <55.010989> speed <40.000000>;
			turn leg1 to z-axis <31.005495> speed <40.000000>;
			turn leg2 to y-axis <34.005495> speed <40.000000>;
			turn leg2 to z-axis <0.000000> speed <40.000000>;
			turn leg3 to z-axis <31.005495> speed <40.000000>;
			turn leg4 to y-axis <0.000000> speed <40.000000>;
			turn leg4 to z-axis <-31.005495> speed <40.000000>;
			turn leg5 to y-axis <-31.005495> speed <40.000000>;
			turn leg5 to z-axis <-31.005495> speed <40.000000>;
			turn leg6 to y-axis <3.000000> speed <40.000000>;
			sleep 200;
		}
		turn leg1 to y-axis <43.005495> speed <40.000000>;
		turn leg1 to z-axis <0.000000> speed <40.000000>;
		turn leg2 to y-axis <0.000000> speed <40.000000>;
		turn leg2 to z-axis <0.000000> speed <40.000000>;
		turn leg3 to y-axis <34.005495> speed <40.000000>;
		turn leg3 to z-axis <31.005495> speed <40.000000>;
		turn leg4 to y-axis <-40.005495> speed <40.000000>;
		turn leg4 to z-axis <-31.005495> speed <40.000000>;
		turn leg5 to y-axis <-37.005495> speed <40.000000>;
		turn leg5 to z-axis <0.000000> speed <40.000000>;
		turn leg6 to y-axis <0.000000> speed <40.000000>;
		turn leg6 to z-axis <-45.010989> speed <40.000000>;
		sleep 200;
	}
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

MotionControl(Func_Var_1)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		if( Func_Var_1 )
		{
			call-script HexapodTrueWalk();
		}
		if( !Func_Var_1 )
		{
			sleep 100;
			turn leg1 to y-axis <0.000000> speed <100.000000>;
			turn leg1 to z-axis <0.000000> speed <100.000000>;
			turn leg2 to y-axis <0.000000> speed <100.000000>;
			turn leg2 to z-axis <0.000000> speed <100.000000>;
			turn leg3 to y-axis <0.000000> speed <100.000000>;
			turn leg3 to z-axis <0.000000> speed <100.000000>;
			turn leg4 to y-axis <0.000000> speed <100.000000>;
			turn leg4 to z-axis <0.000000> speed <100.000000>;
			turn leg5 to y-axis <0.000000> speed <100.000000>;
			turn leg5 to z-axis <0.000000> speed <100.000000>;
			turn leg6 to y-axis <0.000000> speed <100.000000>;
			turn leg6 to z-axis <0.000000> speed <100.000000>;
		}
	}
}

Create()
{
	bMoving = FALSE;
	gun_1 = base;
	restore_delay = 10;
	Static_Var_4 = 0;
	set ARMORED to 1;
	set ACTIVATION to 1;
	Static_Var_5 = 1;
	move ecraseur_epaule to y-axis [13107.199982] now;
	hide cartouche;
	hide bouche;
	dont-cache bouche;
	start-script MotionControl();
	sleep 1;
	Static_Var_5 = 1;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = 20000;
}

RetourTourelle()
{
	sleep restore_delay;
	turn berceau to y-axis <0.000000> speed <25.000000>;
	turn tourelle to x-axis <0.000000> speed <10.000000>;
}

AimFromPrimary(piecenum)
{
	piecenum = berceau;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	while( FALSE )
	{
	}
	turn berceau to y-axis heading speed <150.000000>;
	if( TRUE )
	{
		turn tourelle to x-axis pitch speed <0.000000>;
	}
	if( TRUE )
	{
		turn tourelle to x-axis <30.000000> speed <40.000000>;
	}
	wait-for-turn berceau around y-axis;
	wait-for-turn tourelle around x-axis;
	start-script RetourTourelle();
	return (1);
}

QueryPrimary(piecenum)
{
	piecenum = bouche;
}

FirePrimary()
{
	gun_1 = cephalotorax;
	dont-cache canon;
	show bouche;
	spin canon around z-axis speed <180.000000> accelerate <360.000000>;
	hide bouche;
	stop-spin canon around z-axis decelerate <20.000000>;
	Static_Var_4 = 16384;
	if( TRUE )
	{
		Static_Var_4 = 65536;
	}
	turn ovale to z-axis Static_Var_4 speed <45.010989>;
	cache canon;
	gun_1 = base;
	return (Static_Var_4);
}

AimFromSecondary(piecenum)
{
	piecenum = ecraseur_bras;
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	sleep 200;
	if( FALSE )
	{
		while( TRUE )
		{
			sleep [21.972656];
		}
	}
	return (1);
}

QuerySecondary(piecenum)
{
	piecenum = ecraseur_bras;
}

FireSecondary(Func_Var_1)
{
	return (Static_Var_5);
}

AimFromTertiary(piecenum)
{
	piecenum = cephalotorax;
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	while( TRUE )
	{
		sleep 2000;
	}
	return (1);
}

QueryTertiary(piecenum)
{
	piecenum = cephalotorax;
}

FireTertiary(Func_Var_1)
{
	return (Static_Var_4);
}

SweetSpot(piecenum)
{
	piecenum = cephalotorax;
}

Killed(severity, corpsetype)
{
	explode cephalotorax type BITMAP2;
	explode poupe type BITMAP2;
	explode berceau type BITMAP2;
	explode tourelle type BITMAP1;
	explode ovale type BITMAP2;
	explode canon type BITMAP3;
	explode aiguille type BITMAP4;
	explode cartouche type BITMAP1;
	explode cartouche type BITMAP2;
	explode cartouche type BITMAP3;
	explode cartouche type BITMAP4;
	explode cartouche type BITMAP5;
    explode leg1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode leg2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode leg3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode leg4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode leg5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode leg6 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	corpsetype = 1;
	return (2);
}
