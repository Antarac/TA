#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  pelvis, lleg, lfoot, rleg, rfoot, rthigh, lthigh,
       lcover, rcover, lnose, rnose, sphere, ground;

static-var  Static_Var_1, statechg_DesiredState, statechg_StateChanging, bMoving, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5;

// Signal definitions
#define SIG_ACTIVATE			2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from sphere;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

ShieldOn()
{
	Static_Var_1 = 1;
}

ShieldOff()
{
	Static_Var_1 = 0;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script ShieldOn();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script ShieldOff();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	bMoving = FALSE;
	Static_Var_2 = FALSE;
	Static_Var_3 = 1;
	hide sphere;
	hide pelvis;
	start-script SmokeUnit();
	call-script InitState();

}


Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

AimPrimary(heading, pitch)
{
	sleep 100;
	return (Static_Var_1);
}

FirePrimary()
{
	explode sphere type FALL | BITMAP3;
	sleep 100;
}

QueryPrimary(piecenum)
{
	piecenum = sphere;
}

AimFromPrimary(piecenum)
{
	piecenum = sphere;
}

SweetSpot(piecenum)
{
	piecenum = sphere;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode ground type BITMAPONLY | BITMAP1;
		explode lcover type BITMAPONLY | BITMAP2;
		explode rcover type BITMAPONLY | BITMAP2;
		explode lfoot type BITMAPONLY | BITMAP3;
		explode lleg type BITMAPONLY | BITMAP4;
		explode lthigh type BITMAPONLY | BITMAP5;
		explode lnose type BITMAPONLY | BITMAP1;
		explode pelvis type BITMAPONLY | BITMAP2;
		explode rfoot type BITMAPONLY | BITMAP3;
		explode rleg type BITMAPONLY | BITMAP4;
		explode rthigh type BITMAPONLY | BITMAP5;
		explode rnose type BITMAPONLY | BITMAP1;
		explode sphere type BITMAPONLY | BITMAP4;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode ground type FALL | BITMAP1;
		explode lcover type SHATTER | BITMAP2;
		explode lfoot type FALL | BITMAP3;
		explode lleg type FALL | BITMAP4;
		explode lthigh type FALL | BITMAP5;
		explode lnose type FALL | BITMAP1;
		explode pelvis type FALL | BITMAP2;
		explode rfoot type FALL | BITMAP3;
		explode rleg type FALL | BITMAP4;
		explode rthigh type FALL | BITMAP5;
		explode rnose type FALL | BITMAP1;
		explode sphere type FALL | BITMAP4;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lcover type SHATTER | BITMAP2;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lnose type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rnose type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode sphere type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		return (0);
	}
	corpsetype = 3;
	explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lcover type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lnose type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rnose type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode sphere type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
}
