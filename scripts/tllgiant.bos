
piece base,body,wake1,wake2,wake3,pad1,pad2,radar,nano;

static-var pad;

#define SIG_WAKE 2

#define SMOKEPIECE1 pad1
#define SMOKEPIECE2 pad2
#define SMOKEPIECE3 radar

#include "smokeunit.h"
#include "exptype.h"
#include "SFXtype.h"

Create()
{ pad=0;
  start-script SmokeUnit();
   while(get BUILD_PERCENT_LEFT)
		{
		sleep 1000;
		}
   spin radar around y-axis speed <60>;
 }

StartMoving()
{ signal SIG_WAKE;
  set-signal-mask SIG_WAKE;
  while (TRUE)
   { emit-sfx SFXTYPE_WAKE1 from wake1;
     emit-sfx SFXTYPE_WAKE1 from wake2;
     emit-sfx SFXTYPE_WAKE1 from wake3;
     sleep 300;
    }
 }

StopMoving()
{ signal SIG_WAKE;
 }

Activate()
{ spin radar around y-axis speed <60> accelerate <1>;
   dont-cache pad1;
   dont-cache pad2;
   dont-cache radar;
 }

Deactivate()
{ stop-spin radar around y-axis decelerate <1>;
   cache pad1;
   cache pad2;
   cache radar;
 }

QueryLandingPad(piece1,piece2)
{ pad = !pad;
  if (pad)
   { 
	piece1=pad2; 
	piece2=pad1; 
	return 0; 
   }
  piece1=pad1; 
  piece2=pad2;
 }

SweetSpot(piecenum)
{ piecenum=base;
 }

Killed( severity, corpsetype )
{ explode body type BITMAPONLY | BITMAP5;
  explode pad1 type BITMAPONLY | BITMAP4;
  explode radar type BITMAPONLY | BITMAP3;
  explode wake1 type BITMAPONLY | BITMAP3;
  explode wake2 type BITMAPONLY | BITMAP3;
  explode pad1 type BITMAPONLY | BITMAP3;
  if (severity <= 25)
   { corpsetype = 1; return( 0 ); }
  explode radar type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
  explode radar type SHATTER | EXPLODE_ON_HIT | BITMAP1;
  if (severity <= 50)
   { corpsetype = 2; return( 0 ); }
  corpsetype = 3;
  explode body type SHATTER | EXPLODE_ON_HIT | BITMAP1;
 }
